{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","robo","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAeeA,EAZH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACrB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,6BAAKL,IACL,4BAAIC,WCYLK,EAlBC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACd,OACI,8BAEMA,EAAOC,KAAI,SAAAC,GACT,OACI,cAAC,EAAD,CACMP,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHNQ,EAAKP,UCMtBQ,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKR,UAAU,MAAf,SACI,uBACIA,UAAU,gCACVS,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCbI,EARD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAjE,SACKJ,EAAMK,Y,4BCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKX,MAAMK,a,GAhBEQ,a,MCyCbC,MAnCf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACLxB,EADK,KACEyB,EADF,OAEyBD,mBAAS,IAFlC,mBAELE,EAFK,KAEOC,EAFP,KAIXC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAUR,EAAUQ,QAC5B,IAEF,IAIMC,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAK3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAGxD,OACsB,IAAlBrC,EAAOuC,OAEF,4CAED,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAW,KAAf,0BACA,cAAC,EAAD,CAAWQ,aAfA,SAACoC,GACpBb,EAAea,EAAMC,OAAOC,UAepB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1C,OAAQkC,YCxB3BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACL,cAAC,EAAD,IACCC,SAASC,eAAe,SAM7BX,M","file":"static/js/main.e121afed.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css'\n\nconst Card =({name,email,id}) =>{    \n    return (\n        <div className='bg-light-pink dib br3 pa3 ma2 grow bw2 shadow-5'>           \n            <img src={`https://robohash.org/${id}?200x200`} alt='robot'/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card';\n\nconst CardList =({robots}) => {    \n    return(\n        <div>\n          {\n              robots.map(user => {\n                return (\n                    <Card key= {user.id} \n                          id={user.id} \n                          name={user.name} \n                          email={user.email}\n                    />\n                );\n            })\n          }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return(\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--red bg-lighest-pink'\n                type='search'\n                placeholder='search robots'\n                onChange = {searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll =(props) => {\n    return (\n        <div style={{overflowY:'scroll',border:'5px solid black', height:'800px' }}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            hasError: false\n        }\n    }   \n\n    conponentDidCatch(error,info){\n        this.setState({hasError : true});\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Oops. That is an error</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React,{useState,useEffect} from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nimport './App.css';\n\nfunction App() {    \n    const[robots,setRobots] =useState([]);    \n    const[searchField,setSearchField] = useState('');\n\n    useEffect(() =>{\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => {setRobots(users)});\n    },[])   \n\n    const onSearchChange = (event) => {\n        setSearchField(event.target.value);        \n    }\n\n    const filteredRobots = robots.filter(robo => {\n        return robo.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return(       \n        robots.length === 0 \n        ?\n             <h1>Loading...</h1>\n        :           \n            <div className='tc'>\n                <h1 className ='f1'>RoboFriends </h1>\n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundary>                    \n                </Scroll>                   \n            </div>      \n    )    \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(  \n    <App/>,\n     document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}